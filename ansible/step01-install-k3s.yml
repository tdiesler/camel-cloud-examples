#
# ansible-playbook -i ansible/hosts.ini ansible/step01-install-k3s.yml
#
---
- name: Install K3S
  hosts: servers
  become: yes
  tasks:
    - name: Get external IP address
      ansible.builtin.shell: "curl -s ipinfo.io/ip"
      register: external_ip

    - name: Install k3s
      ansible.builtin.shell: |
        curl -sfL https://get.k3s.io | sh -s - --write-kubeconfig-mode 660 --tls-san {{ external_ip.stdout }}
      register: k3s_install

    - name: Install k3s result
      ansible.builtin.debug:
        var: k3s_install

    - name: Create symlink for kubectl
      ansible.builtin.file:
        src: /usr/local/bin/kubectl
        dest: /usr/bin/kubectl
        state: link

    - name: Wait for file to exist
      ansible.builtin.wait_for:
        path: /etc/rancher/k3s/k3s.yaml
        state: present
        timeout: 120
        delay: 5
        sleep: 2
      register: wait_for_file

    - name: Wait for file result
      ansible.builtin.debug:
        var: wait_for_file

    - name: Fetch kubectl version
      ansible.builtin.shell:
        kubectl version
      when: k3s_install.rc == 0
      register: kubectl_version

    - name: Display kubectl version
      ansible.builtin.debug:
        var: kubectl_version.stdout
      when: kubectl_version is defined

    - name: Copy kubectl config
      ansible.builtin.shell:
        cp /etc/rancher/k3s/k3s.yaml /etc/rancher/k3s/k3s-{{ ansible_hostname }}.yaml
      register: copy_kube_config

    - name: Copy kubectl config result
      ansible.builtin.debug:
        var: copy_kube_config

    - name: Replace 127.0.0.1 with external IP
      ansible.builtin.shell:
        sed -i "s/127.0.0.1/{{ external_ip.stdout }}/" /etc/rancher/k3s/k3s-{{ ansible_hostname }}.yaml
      register: replace_ip

    - name: Replace 127.0.0.1 result
      ansible.builtin.debug:
        var: replace_ip

    - name: Replace 'default' with {{ ansible_hostname }}
      ansible.builtin.shell:
        sed -i "s/default/{{ ansible_hostname }}/" /etc/rancher/k3s/k3s-{{ ansible_hostname }}.yaml
      register: replace_default

    - name: Replace 'default' result
      ansible.builtin.debug:
        var: replace_default

    - name: Fetch kubectl config from remote server
      fetch:
        src: /etc/rancher/k3s/k3s-{{ ansible_hostname }}.yaml
        dest: "{{ playbook_dir }}/"
        flat: yes
      register: fetch_kube_config

    - name: Merge kube config files
      local_action:
        module: shell
        cmd: |
          kubectl config delete-context {{ ansible_hostname }} || true \
          && kubectl config delete-cluster {{ ansible_hostname }} || true \
          && kubectl config delete-user {{ ansible_hostname }} || true \
          && KUBECONFIG=~/.kube/config:{{ playbook_dir }}/k3s-{{ ansible_hostname }}.yaml \
            kubectl config view --flatten > {{ playbook_dir }}/merged-config.yaml \
          && rm {{ playbook_dir }}/k3s-{{ ansible_hostname }}.yaml \
          && mv merged-config.yaml ~/.kube/config \
          && chmod 600 ~/.kube/config
      register: kubecfg_merge
      become: no

    - name: Merge kube config result
      ansible.builtin.debug:
        var: kubecfg_merge

    - name: Use context {{ ansible_hostname }}
      local_action:
        module: shell
        cmd: kubectl config use-context {{ ansible_hostname }}
      register: kubecfg_use
      become: no

    - name: Use context result
      ansible.builtin.debug:
        var: kubecfg_use.stdout_lines

    - name: Get kube-system pods
      local_action:
        module: shell
        cmd: kubectl get pod -n kube-system
      register: kube_pods
      become: no

    - name: Get pods result
      ansible.builtin.debug:
        var: kube_pods.stdout_lines

